{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\estre\\\\Desktop\\\\website\\\\kayesokua\\\\react-firebase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\estre\\\\Desktop\\\\website\\\\kayesokua\\\\react-firebase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\estre\\\\Desktop\\\\website\\\\kayesokua\\\\react-firebase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\estre\\\\Desktop\\\\website\\\\kayesokua\\\\react-firebase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\estre\\\\Desktop\\\\website\\\\kayesokua\\\\react-firebase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\estre\\\\Desktop\\\\website\\\\kayesokua\\\\react-firebase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"C:\\\\Users\\\\estre\\\\Desktop\\\\website\\\\kayesokua\\\\react-firebase\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\estre\\\\Desktop\\\\website\\\\kayesokua\\\\react-firebase\\\\src\\\\components\\\\PasswordForget.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\nimport { auth } from \"../firebase\";\nimport * as routes from \"../constants/routes\"; //it resets your password. It doesnâ€™t matter if you are authenticated or not\n\nvar PasswordForgetPage = function PasswordForgetPage() {\n  return React.createElement(\"div\", {\n    class: \"col-md-8 mt-4 ajax-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(PasswordForgetForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }));\n};\n\nvar byPropKey = function byPropKey(propertyName, value) {\n  return function () {\n    return _defineProperty({}, propertyName, value);\n  };\n}; //################### PasswordForget Form ###################\n\n\nvar INITIAL_STATE = {\n  email: \"\",\n  error: null,\n  showingAlert: false\n};\n\nvar PasswordForgetForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PasswordForgetForm, _Component);\n\n  function PasswordForgetForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PasswordForgetForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PasswordForgetForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({}, INITIAL_STATE);\n\n    _this.onSubmit = function (event) {\n      var email = _this.state.email;\n      auth.doPasswordReset(email).then(function () {\n        _this.setState(_objectSpread({}, INITIAL_STATE));\n      }).catch(function (error) {\n        _this.setState(byPropKey(\"error\", error));\n\n        _this.timer(); //show alert message for some seconds\n\n      });\n      event.preventDefault();\n    };\n\n    _this.timer = function () {\n      _this.setState({\n        showingAlert: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          showingAlert: false\n        });\n      }, 4000);\n    };\n\n    return _this;\n  }\n\n  _createClass(PasswordForgetForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          error = _this$state.error,\n          showingAlert = _this$state.showingAlert;\n      var isInvalid = email === \"\";\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, showingAlert && React.createElement(Alert, {\n        color: \"danger\",\n        onLoad: this.timer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, error.message), React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        className: \"cursor-link\",\n        id: \"exampleEmail\",\n        placeholder: \"user@gmail.com\",\n        value: email,\n        onChange: function onChange(event) {\n          return _this2.setState(byPropKey(\"email\", event.target.value));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Button, {\n        disabled: isInvalid,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Reset My Password\"))));\n    }\n  }]);\n\n  return PasswordForgetForm;\n}(Component); //################### PasswordForget Link ###################\n\n\nvar PasswordForgetLink = function PasswordForgetLink() {\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: routes.PASSWORD_FORGET,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Forgot Password?\"));\n};\n\nexport default PasswordForgetPage;\nexport { PasswordForgetForm, PasswordForgetLink }; // <form onSubmit={this.onSubmit}>\n//   <input\n//     value={this.state.email}\n//     onChange={event =>\n//       this.setState(byPropKey(\"email\", event.target.value))\n//     }\n//     type=\"text\"\n//     placeholder=\"Email Address\"\n//   />\n//   <button disabled={isInvalid} type=\"submit\">\n//     Reset My Password\n//   </button>\n//   {error && <p>{error.message}</p>}\n// </form>","map":{"version":3,"sources":["C:\\Users\\estre\\Desktop\\website\\kayesokua\\react-firebase\\src\\components\\PasswordForget.js"],"names":["React","Component","Link","Button","Form","FormGroup","Label","Input","Alert","auth","routes","PasswordForgetPage","byPropKey","propertyName","value","INITIAL_STATE","email","error","showingAlert","PasswordForgetForm","state","onSubmit","event","doPasswordReset","then","setState","catch","timer","preventDefault","setTimeout","isInvalid","message","target","PasswordForgetLink","PASSWORD_FORGET"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Form, FormGroup, Label, Input, Alert } from \"reactstrap\";\n\nimport { auth } from \"../firebase\";\nimport * as routes from \"../constants/routes\";\n\n//it resets your password. It doesnâ€™t matter if you are authenticated or not\nconst PasswordForgetPage = () => (\n  <div class=\"col-md-8 mt-4 ajax-form\">\n\t  <PasswordForgetForm />\n\t</div>\n);\n\nconst byPropKey = (propertyName, value) => () => ({\n  [propertyName]: value\n});\n\n//################### PasswordForget Form ###################\nconst INITIAL_STATE = {\n  email: \"\",\n  error: null,\n  showingAlert: false\n};\n\nclass PasswordForgetForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  onSubmit = event => {\n    const { email } = this.state;\n\n    auth\n      .doPasswordReset(email)\n      .then(() => {\n        this.setState({ ...INITIAL_STATE });\n      })\n      .catch(error => {\n        this.setState(byPropKey(\"error\", error));\n        this.timer(); //show alert message for some seconds\n      });\n\n    event.preventDefault();\n  };\n\n  timer = () => {\n    this.setState({\n      showingAlert: true\n    });\n\n    setTimeout(() => {\n      this.setState({\n        showingAlert: false\n      });\n    }, 4000);\n  };\n\n  render() {\n    const { email, error, showingAlert } = this.state;\n\n    const isInvalid = email === \"\";\n\n    return (\n      <div>\n        {showingAlert && (\n          <Alert color=\"danger\" onLoad={this.timer}>\n            {error.message}\n          </Alert>\n        )}\n\n        <Form onSubmit={this.onSubmit}>\n          <FormGroup>\n            \n            <Input\n              type=\"email\"\n              name=\"email\"\n              className=\"cursor-link\"\n              id=\"exampleEmail\"\n              placeholder=\"user@gmail.com\"\n              value={email}\n              onChange={event =>\n                this.setState(byPropKey(\"email\", event.target.value))\n              }\n            />\n          </FormGroup>\n\n          <div className=\"text-center\">\n            <Button disabled={isInvalid} type=\"submit\">\n              Reset My Password\n            </Button>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\n//################### PasswordForget Link ###################\nconst PasswordForgetLink = () => (\n  <p>\n    <Link to={routes.PASSWORD_FORGET}>Forgot Password?</Link>\n  </p>\n);\n\nexport default PasswordForgetPage;\n\nexport { PasswordForgetForm, PasswordForgetLink };\n\n// <form onSubmit={this.onSubmit}>\n//   <input\n//     value={this.state.email}\n//     onChange={event =>\n//       this.setState(byPropKey(\"email\", event.target.value))\n//     }\n//     type=\"text\"\n//     placeholder=\"Email Address\"\n//   />\n//   <button disabled={isInvalid} type=\"submit\">\n//     Reset My Password\n//   </button>\n\n//   {error && <p>{error.message}</p>}\n// </form>\n"]},"metadata":{},"sourceType":"module"}