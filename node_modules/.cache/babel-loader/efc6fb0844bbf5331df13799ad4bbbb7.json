{"ast":null,"code":"(function () {\n  'use strict';\n\n  var canvas = document.getElementById('canvas'),\n      ctx = canvas.getContext('2d'),\n      img = new Image(),\n      currentFrame = 0,\n      totalFrame = 10,\n      offset = .01,\n      width,\n      height,\n      imgData,\n      data,\n      pr = window.devicePixelRatio || 1,\n      w = window.innerWidth,\n      h = window.innerHeight,\n      requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n  window.requestAnimationFrame = requestAnimationFrame;\n  img.crossOrigin = \"Anonymous\";\n  img.src = 'https://zupra.github.io/test/filter.jpg';\n\n  img.onload = function () {\n    init();\n    glitchAnimation();\n  };\n\n  var init = function () {\n    canvas.width = width = w * pr;\n    canvas.height = height = h * pr; //anvas.width = width = img.width; //* .5;\n\n    offset = width * offset; //canvas.height = height = ~~(img.height * (width - offset * 2) / img.width);\n    //document.querySelector('.glitch-image').style.width = width + 'px';\n    //document.querySelector('.glitch-image').style.height = height + 'px';\n  }.bind(this);\n\n  var glitchAnimation = function glitchAnimation() {\n    if (!(currentFrame % totalFrame) || currentFrame > totalFrame) {\n      clearCanvas();\n      ctx.drawImage(img, 0, 0, img.width, img.height, offset, 0, width - offset * 2, height);\n      imgData = ctx.getImageData(0, 0, width, height);\n      imgData = pixelProcessor(imgData, 4, pixelCooler);\n      ctx.putImageData(imgData, 0, 0);\n      currentFrame = 0;\n    }\n\n    if (currentFrame === randInt(0, totalFrame)) {\n      imgData = pixelProcessor(imgData, 1, pixelFlick);\n      ctx.putImageData(imgData, 0, 0);\n      drawGlitch(width, height, randInt(3, 10), glitchBlock);\n      drawGlitch(width, height, randInt(3, 30), glitchLine);\n    }\n\n    currentFrame++;\n    window.requestAnimationFrame(glitchAnimation);\n  };\n\n  var pixelFlick = function pixelFlick(i, d) {\n    d[i] = d[i + 16];\n  };\n\n  var pixelCooler = function pixelCooler(i, d) {\n    d[i] = 1;\n    d[i + 1] += randInt(2, 5);\n    d[i + 2] *= randInt(1, 3) + 8;\n  };\n\n  var glitchBlock = function glitchBlock(i, x, y) {\n    if (i > 3) {\n      var spliceHeight = 1 + randInt(0, 10);\n      ctx.drawImage(canvas, x, y, x, spliceHeight, randInt(0, x), y, randInt(x, width), spliceHeight);\n    }\n  };\n\n  var glitchLine = function glitchLine(i, x, y) {\n    var spliceHeight = 1 + randInt(1, 50);\n    ctx.drawImage(canvas, offset, y, width - offset * 2, spliceHeight, 1 + randInt(0, offset * 2), //-offset / 3 + randInt(0, offset / 1.5),\n    y + randInt(0, 10), width - offset, spliceHeight);\n  };\n\n  var pixelProcessor = function pixelProcessor(imageData, step, callback) {\n    var data = imageData.data || [],\n        step = step * 4 || 4;\n\n    if (data.length) {\n      var rgb = [];\n\n      for (var i = 0; i < data.length; i += step) {\n        callback && callback(i, data);\n      }\n\n      return imageData;\n    } else {\n      return imageData;\n    }\n  };\n\n  var drawGlitch = function drawGlitch(width, height, amount, callback) {\n    for (var i = 0; i < (amount || 10); i++) {\n      var x = Math.random() * width + 1,\n          y = Math.random() * height + 1;\n      callback(i, x, y);\n    }\n  };\n\n  var randInt = function randInt(a, b) {\n    return ~~(Math.random() * (b - a) + a);\n  };\n\n  var clearCanvas = function clearCanvas() {\n    ctx.clearRect(0, 0, width, height);\n  };\n})();","map":{"version":3,"sources":["C:\\Users\\estre\\Desktop\\website\\kayesokua\\react-firebase\\src\\components\\about.js"],"names":["canvas","document","getElementById","ctx","getContext","img","Image","currentFrame","totalFrame","offset","width","height","imgData","data","pr","window","devicePixelRatio","w","innerWidth","h","innerHeight","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","crossOrigin","src","onload","init","glitchAnimation","bind","clearCanvas","drawImage","getImageData","pixelProcessor","pixelCooler","putImageData","randInt","pixelFlick","drawGlitch","glitchBlock","glitchLine","i","d","x","y","spliceHeight","imageData","step","callback","length","rgb","amount","Math","random","a","b","clearRect"],"mappings":"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","sourcesContent":["(function() {\r\n    'use strict';\r\n  \r\n    var canvas = document.getElementById('canvas'),\r\n      ctx = canvas.getContext('2d'),\r\n      img = new Image(),\r\n      currentFrame = 0,\r\n      totalFrame = 10,\r\n      offset = .01,\r\n      width,\r\n      height,\r\n      imgData,\r\n      data,\r\n        \r\n      pr = window.devicePixelRatio || 1,\r\n      w = window.innerWidth,\r\n      h = window.innerHeight,\r\n        \r\n      requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\r\n      window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\r\n  \r\n    window.requestAnimationFrame = requestAnimationFrame;\r\n  \r\n    img.crossOrigin = \"Anonymous\";\r\n    img.src = 'https://zupra.github.io/test/filter.jpg';\r\n    img.onload = function() {\r\n      init();\r\n      glitchAnimation();\r\n    };\r\n  \r\n    var init = function() {\r\n      \r\n      canvas.width = width = w * pr;\r\n      canvas.height = height = h * pr;\r\n      \r\n      //anvas.width = width = img.width; //* .5;\r\n      offset = width * offset;\r\n      //canvas.height = height = ~~(img.height * (width - offset * 2) / img.width);\r\n      \r\n      //document.querySelector('.glitch-image').style.width = width + 'px';\r\n      //document.querySelector('.glitch-image').style.height = height + 'px';\r\n    }.bind(this);\r\n  \r\n    var glitchAnimation = function() {\r\n  \r\n      if (!(currentFrame % totalFrame) || currentFrame > totalFrame) {\r\n  \r\n        clearCanvas();\r\n  \r\n        ctx.drawImage(img,\r\n          0,\r\n          0,\r\n          img.width,\r\n          img.height,\r\n          offset,\r\n          0,\r\n          width - offset * 2,\r\n          height);\r\n  \r\n        imgData = ctx.getImageData(0, 0, width, height);\r\n  \r\n        imgData = pixelProcessor(imgData, 4, pixelCooler);\r\n  \r\n        ctx.putImageData(imgData, 0, 0);\r\n  \r\n        currentFrame = 0;\r\n      }\r\n  \r\n      if (currentFrame === randInt(0, totalFrame)) {\r\n  \r\n        imgData = pixelProcessor(imgData, 1, pixelFlick);\r\n  \r\n        ctx.putImageData(imgData, 0, 0);\r\n  \r\n        drawGlitch(width, height, randInt(3, 10), glitchBlock);\r\n  \r\n        drawGlitch(width, height, randInt(3, 30), glitchLine);\r\n      }\r\n  \r\n      currentFrame++;\r\n  \r\n      window.requestAnimationFrame(glitchAnimation);\r\n  \r\n    };\r\n  \r\n    var pixelFlick = function(i, d) {\r\n      d[i] = d[i + 16];\r\n    };\r\n  \r\n    var pixelCooler = function(i, d) {\r\n      d[i] = 1;\r\n      d[i + 1] += randInt(2, 5);\r\n      d[i + 2] *= randInt(1, 3) + 8;\r\n    };\r\n  \r\n    var glitchBlock = function(i, x, y) {\r\n      if (i > 3) {\r\n        var spliceHeight = 1 + randInt(0, 10);\r\n  \r\n        ctx.drawImage(canvas,\r\n          x,\r\n          y,\r\n          x,\r\n          spliceHeight,\r\n          randInt(0, x),\r\n          y,\r\n          randInt(x, width),\r\n          spliceHeight);\r\n      }\r\n    };\r\n  \r\n    var glitchLine = function(i, x, y) {\r\n      var spliceHeight = 1 + randInt(1, 50);\r\n  \r\n      ctx.drawImage(canvas,\r\n        offset,\r\n        y,\r\n        width - offset * 2,\r\n        spliceHeight,\r\n        1 + randInt(0, offset * 2), //-offset / 3 + randInt(0, offset / 1.5),\r\n        y + randInt(0, 10),\r\n        width - offset,\r\n        spliceHeight);\r\n    };\r\n  \r\n    var pixelProcessor = function(imageData, step, callback) {\r\n      var data = imageData.data || [],\r\n        step = step * 4 || 4;\r\n  \r\n      if (data.length) {\r\n        var rgb = [];\r\n  \r\n        for (var i = 0; i < data.length; i += step) {\r\n          callback && callback(i, data);\r\n        }\r\n  \r\n        return imageData;\r\n      } else {\r\n        return imageData;\r\n      }\r\n    };\r\n  \r\n    var drawGlitch = function(width, height, amount, callback) {\r\n      for (var i = 0; i < (amount || 10); i++) {\r\n        var x = Math.random() * width + 1,\r\n          y = Math.random() * height + 1;\r\n  \r\n        callback(i, x, y);\r\n      }\r\n    };\r\n  \r\n    var randInt = function(a, b) {\r\n      return ~~(Math.random() * (b - a) + a);\r\n    };\r\n  \r\n    var clearCanvas = function() {\r\n      ctx.clearRect(0, 0, width, height);\r\n    };\r\n  })();"]},"metadata":{},"sourceType":"module"}