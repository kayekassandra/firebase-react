{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\estre\\\\Desktop\\\\website\\\\kayesokua\\\\react-firebase\\\\src\\\\components\\\\charts\\\\project2pie.js\";\nvar PieWithLegend = React.createClass({\n  displayName: \"PieWithLegend\",\n  getDefaultProps: function getDefaultProps() {\n    return {\n      data: []\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    // The data-series configuration does not gets loaded automatically.\n    // We need to call reloadConfiguration() for this.\n    if (ReactDOM.findDOMNode(this).reloadConfiguration) {\n      ReactDOM.findDOMNode(this).reloadConfiguration();\n    }\n  },\n  shouldComponentUpdate: function shouldComponentUpdate() {\n    // This prevents React from updating the chart DOM. We should handle\n    // all the chart updates manually using charts API.\n    return false;\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(newProps) {\n    // Update the series data\n    ReactDOM.findDOMNode(this).chart.series[0].setData(newProps.data);\n  },\n  render: function render() {\n    // Note: custom non-standard HTML attributes work in React only when\n    // custom elements are used (there're hyphens in element's name), or\n    // when the \"is\" attribute is preset.\n    return React.createElement(\"vaadin-pie-chart\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"chart-title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Revenue by industry\"), React.createElement(\"subtitle\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"2015\"), React.createElement(\"tooltip\", {\n      is: \"\",\n      \"point-format\": \"<b>{point.percentage:.1f}%</b>\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"plot-options\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"pie\", {\n      is: \"\",\n      \"allow-point-select\": true,\n      \"show-in-legend\": true,\n      cursor: \"pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"data-labels\", {\n      enabled: true,\n      format: \"{point.name}: {point.y:.1f} M\\u20AC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }))), React.createElement(\"data-series\", {\n      name: \"Revenue share\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"data\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.data.map(JSON.stringify).join(','))));\n  }\n});\ndocument.addEventListener('WebComponentsReady', function () {\n  ReactDOM.render(React.createElement(PieWithLegend, {\n    data: [[\"Aerospace\", 45.0], [\"Medical\", 26.8], [\"Agriculture \", 12.8], [\"Automotive\", 8.5], [\"Consumers\", 6.2], [\"Subsidies\", 0.7]],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), document.getElementById('chart'));\n});","map":{"version":3,"sources":["C:\\Users\\estre\\Desktop\\website\\kayesokua\\react-firebase\\src\\components\\charts\\project2pie.js"],"names":["PieWithLegend","React","createClass","getDefaultProps","data","componentDidMount","ReactDOM","findDOMNode","reloadConfiguration","shouldComponentUpdate","componentWillReceiveProps","newProps","chart","series","setData","render","props","map","JSON","stringify","join","document","addEventListener","getElementById"],"mappings":";AAAA,IAAIA,aAAa,GAAGC,KAAK,CAACC,WAAN,CAAkB;AAAA;AACpCC,EAAAA,eAAe,EAAE,2BAAW;AAC1B,WAAO;AACLC,MAAAA,IAAI,EAAE;AADD,KAAP;AAGD,GALmC;AAOpCC,EAAAA,iBAAiB,EAAE,6BAAW;AAC5B;AACA;AACA,QAAGC,QAAQ,CAACC,WAAT,CAAqB,IAArB,EAA2BC,mBAA9B,EAAmD;AACjDF,MAAAA,QAAQ,CAACC,WAAT,CAAqB,IAArB,EAA2BC,mBAA3B;AACD;AACF,GAbmC;AAepCC,EAAAA,qBAAqB,EAAE,iCAAW;AAChC;AACA;AACA,WAAO,KAAP;AACD,GAnBmC;AAqBpCC,EAAAA,yBAAyB,EAAE,mCAASC,QAAT,EAAmB;AAC5C;AACAL,IAAAA,QAAQ,CAACC,WAAT,CAAqB,IAArB,EAA2BK,KAA3B,CAAiCC,MAAjC,CAAwC,CAAxC,EAA2CC,OAA3C,CAAmDH,QAAQ,CAACP,IAA5D;AACD,GAxBmC;AA0BpCW,EAAAA,MAAM,EAAE,kBAAW;AACjB;AACA;AACA;AACA,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADK,EAEL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFK,EAGL;AAAS,MAAA,EAAE,EAAC,EAAZ;AAAe,sBAAa,gCAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,EAAE,EAAC,EAAR;AAAW,4BAAoB,IAA/B;AAAqC,wBAAgB,IAArD;AACM,MAAA,MAAM,EAAC,SADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAa,MAAA,OAAO,EAAE,IAAtB;AACI,MAAA,MAAM,EAAC,qCADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CALK,EAYL;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKC,KAAL,CAAWZ,IAAX,CAAgBa,GAAhB,CAAoBC,IAAI,CAACC,SAAzB,EAAoCC,IAApC,CAAyC,GAAzC,CAAP,CADF,CAZK,CAAP;AAiBD;AA/CmC,CAAlB,CAApB;AAkDAC,QAAQ,CAACC,gBAAT,CAA0B,oBAA1B,EAAgD,YAAW;AACzDhB,EAAAA,QAAQ,CAACS,MAAT,CACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,CAAE,CAAC,WAAD,EAAc,IAAd,CAAF,EAAuB,CAAC,SAAD,EAAY,IAAZ,CAAvB,EACjB,CAAC,cAAD,EAAiB,IAAjB,CADiB,EACO,CAAC,YAAD,EAAe,GAAf,CADP,EAEjB,CAAC,WAAD,EAAc,GAAd,CAFiB,EAEG,CAAC,WAAD,EAAc,GAAd,CAFH,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIEM,QAAQ,CAACE,cAAT,CAAwB,OAAxB,CAJF;AAMD,CAPD","sourcesContent":["var PieWithLegend = React.createClass({\r\n  getDefaultProps: function() {\r\n    return {\r\n      data: []\r\n    };\r\n  },\r\n  \r\n  componentDidMount: function() {\r\n    // The data-series configuration does not gets loaded automatically.\r\n    // We need to call reloadConfiguration() for this.\r\n    if(ReactDOM.findDOMNode(this).reloadConfiguration) {\r\n      ReactDOM.findDOMNode(this).reloadConfiguration();\r\n    }\r\n  },\r\n  \r\n  shouldComponentUpdate: function() {\r\n    // This prevents React from updating the chart DOM. We should handle\r\n    // all the chart updates manually using charts API.\r\n    return false;\r\n  },\r\n  \r\n  componentWillReceiveProps: function(newProps) {\r\n    // Update the series data\r\n    ReactDOM.findDOMNode(this).chart.series[0].setData(newProps.data);\r\n  },\r\n\r\n  render: function() {\r\n    // Note: custom non-standard HTML attributes work in React only when\r\n    // custom elements are used (there're hyphens in element's name), or\r\n    // when the \"is\" attribute is preset.\r\n    return <vaadin-pie-chart>\r\n      <chart-title>Revenue by industry</chart-title>\r\n      <subtitle>2015</subtitle>\r\n      <tooltip is=\"\" point-format=\"<b>{point.percentage:.1f}%</b>\">\r\n      </tooltip>\r\n      <plot-options>\r\n        <pie is=\"\" allow-point-select={true} show-in-legend={true} \r\n              cursor=\"pointer\">\r\n          <data-labels enabled={true}\r\n              format=\"{point.name}: {point.y:.1f} Mâ‚¬\"></data-labels>\r\n        </pie>\r\n      </plot-options>\r\n      <data-series name=\"Revenue share\">\r\n        <data>{this.props.data.map(JSON.stringify).join(',')}\r\n        </data>\r\n      </data-series>\r\n    </vaadin-pie-chart>;\r\n  }\r\n});\r\n\r\ndocument.addEventListener('WebComponentsReady', function() {\r\n  ReactDOM.render(\r\n    <PieWithLegend data={[ [\"Aerospace\", 45.0], [\"Medical\", 26.8],\r\n        [\"Agriculture \", 12.8], [\"Automotive\", 8.5],\r\n        [\"Consumers\", 6.2], [\"Subsidies\", 0.7] ]}/>,\r\n    document.getElementById('chart')\r\n  );\r\n});"]},"metadata":{},"sourceType":"module"}